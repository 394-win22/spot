{"ast":null,"code":"var _jsxFileName = \"/Users/nirajshah/Library/Mobile Documents/com~apple~CloudDocs/Documents/A Northwestern/A Classes/22 Winter Quarter/CS 394/Spot/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component, PropTypes } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport Handlebars from \"handlebars/dist/cjs/handlebars\";\nimport { MapLayout, MainLayout, PanelStyles, LocationName, AmenityName, AvailabilityTxt, PriceTxt, ScanButton, ScanButtonTxt, AmenitiesLayout, BottomNav, ScanBottomNavTxt, ScanButtonBottomNav, AccountIcon, HelpIcon, TopBanner } from \"./styles/mapstyles\";\nimport close from \"../src/styles/svgs/close.svg\";\nimport CurrentLocationIcon from \"../src/styles/svgs/Location.svg\";\nimport paws from \"../src/styles/svgs/paws.png\";\nimport Activepaws from \"../src/styles/svgs/ActivePaws.png\";\nimport { Panel, PanelGroup } from \"rsuite\";\nimport CurrentLocation from \"./Map\";\nimport { database, signInwithG, auth } from \"./utilities/firebase.js\";\nimport { getDatabase, onValue, ref, set, on } from \"firebase/database\";\nimport scanSVG from \"../src/styles/svgs/scan.svg\";\nimport accSVG from \"../src/styles/svgs/account.svg\";\nimport helpSVG from \"../src/styles/svgs/help.svg\";\nimport topLogo from \"../src/styles/svgs/SpotLogos.png\";\nimport Profile from \"./Profile.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst google = window.google;\n/**\n * Defines an instance of the Locator+ solution, to be instantiated\n * when the Maps library is loaded.\n */\n// const mapStyles = {\n//   width: \"428px\",\n//   height: \"934px\",\n// };\n// const instance = (\n//   <Panel header=\"Panel title\">\n//     <p>HELLO WORLD</p>\n//   </Panel>\n// );\n// let user = null;\n\nconst SignInButton = () => {\n  // {document.getElementById(\"user-info\").innerHTML = \"\"};\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn\",\n    onClick: () => {\n      signInwithG();\n    },\n    children: \"Sign In\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}; // const SignOutButton = (cuser) => {\n//   return (<>\n//     <p className=\"email\">\n//       {window.innerWidth > 800 ? cuser : null}\n//       <button className=\"btn\" id=\"out\" style={{ width: 120, margin: 20 }}\n//         onClick={() => auth.signOut()}>\n//         Sign Out\n//       </button>\n//     </p>\n//   </>\n//   )\n// };\n// function MyFireBaseHook()\n// {\n//   return function WrappedComponent()\n//     {\n//       const [locations, loading, error] = useData('/Locations/');\n//       if (error) return <h1>{error}</h1>;\n//       if (loading) return <h1>Loading Locations...</h1>;\n//       console.log(locations)\n//       return <Component Location = {locations}/>;\n//     };\n// }\n\n\n_c = SignInButton;\nexport const ProfileButton = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"image\",\n    src: accSVG,\n    name: \"saveForm\",\n    className: \"btTxt submit\",\n    onClick: () => ReactDOM.render( /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }, this), document.getElementById(\"root\"))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 7\n  }, this)\n}, void 0, false); //Initializes the map and marker functionality\n\n_c2 = ProfileButton;\nexport class MapContainer extends Component {\n  constructor(_props) {\n    super(_props);\n    this.unsubscribeFromAuth = signInwithG();\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.onSignIn = () => {\n      this.setState({\n        user: true\n      });\n    };\n\n    this.state = {\n      showingInfoWindow: false,\n      // Hides or shows the InfoWindow\n      activeMarker: {},\n      // Shows the active marker upon click\n      selectedPlace: {},\n      // Shows the InfoWindow to the selected place upon a marker\n      icon: paws,\n      locationList: [],\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    const reference = ref(database, \"/Locations/\");\n    onValue(reference, snapshot => {\n      let locations = [];\n      snapshot.forEach(snap => {\n        // snap.val() is the dictionary with all your keys/values from the 'students-list' path\n        locations.push(snap.val());\n      });\n      this.setState({\n        locationList: locations\n      });\n    });\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\n      this.setState({\n        currentUser: user\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //Renders the panel and the map <MyFireBaseHook/>\n      _jsxDEV(\"div\", {\n        children: !this.state.currentUser ? /*#__PURE__*/_jsxDEV(SignInButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"outline\",\n          children: /*#__PURE__*/_jsxDEV(MainLayout, {\n            children: [/*#__PURE__*/_jsxDEV(TopBanner, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: topLogo,\n                width: \"96px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"user-info\",\n              children: this.state.currentUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: this.state.currentUser.photoURL\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Name: \", this.state.currentUser.displayName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Email: \", this.state.currentUser.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn\",\n                  onClick: () => auth.signOut(),\n                  children: \"Sign Out\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 42\n              }, this) : /*#__PURE__*/_jsxDEV(SignInButton, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(CurrentLocation, {\n              centerAroundCurrentLocation: true,\n              google: this.props.google,\n              children: [/*#__PURE__*/_jsxDEV(Marker, {\n                icon: CurrentLocationIcon,\n                onClick: this.onMarkerClick,\n                name: \"Current Location\"\n              }, \"current\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 15\n              }, this), Object.values(this.state.locationList).map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n                onClick: this.onMarkerClick,\n                icon: this.state.activeMarker === marker ? Activepaws : paws,\n                position: {\n                  lat: marker.latitude,\n                  lng: marker.longitude\n                },\n                name: marker.name,\n                availability: \"\\u2022 Available\",\n                price: \"$3.30 unlock, $0.3 per min\",\n                title: marker.amenities\n              }, marker.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)), /*#__PURE__*/_jsxDEV(InfoWindow, {\n                marker: this.state.activeMarker,\n                visible: this.state.showingInfoWindow,\n                onClose: this.onClose,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: this.state.selectedPlace.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(BottomNav, {\n              children: [/*#__PURE__*/_jsxDEV(AccountIcon, {\n                children: /*#__PURE__*/_jsxDEV(ProfileButton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(ScanButtonBottomNav, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: scanSVG\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ScanBottomNavTxt, {\n                  children: \"SCAN\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(HelpIcon, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: helpSVG\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 13\n            }, this), this.state.showingInfoWindow ? /*#__PURE__*/_jsxDEV(PanelStyles, {\n              marker: this.state.activeMarker,\n              visible: this.state.showingInfoWindow,\n              onClose: this.onClose,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: close,\n                onClick: () => this.setState({\n                  showingInfoWindow: false,\n                  activeMarker: null\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AvailabilityTxt, {\n                children: this.state.selectedPlace.availability\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(LocationName, {\n                children: this.state.selectedPlace.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(PriceTxt, {\n                children: this.state.selectedPlace.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AmenitiesLayout, {\n                children: /*#__PURE__*/_jsxDEV(AmenityName, {\n                  children: this.state.selectedPlace.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n                children: /*#__PURE__*/_jsxDEV(ScanButton, {\n                  children: /*#__PURE__*/_jsxDEV(ScanButtonTxt, {\n                    children: \"Scan to unlock\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n} // API Keys\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAQoEnnmtQQ0bJ8fCvmKHPOI6VtNCXD6EY\"\n})(MapContainer); //Run App (not using it rn - may need it later)\n// function App() {\n//   return (\n//     //Renders the panel and the map\n//      <div className=\"panel_map\">\n//        <Panel className=\"panel\" header=\"Panel title\">\n//          <p>HELLO WORLD</p>\n//         </Panel>\n//       <div className=\"map\">\n//       {/* Map API initialization */}\n//       <Map\n//         google={this.props.google}\n//         zoom={14}\n//         style={mapStyles}\n//         initialCenter={\n//           {\n//             lat: 41.918060,\n//             lng: -87.636990\n//           }\n//         }\n//         >\n//        {/* Populating markers from marker list, allows for multiple markers */}\n//       {Object.values(markers).map(marker => (\n//             <Marker\n//               onClick={this.onMarkerClick}\n//               position={{ lat: marker.latitude, lng: marker.longitude }}\n//               key={marker.id}\n//               name={marker.name}\n//               title = {marker.amenities}\n//             />\n//         ))}\n//         {/* What shows up in the window on marker click */}\n//         <InfoWindow\n//           marker={this.state.activeMarker}\n//           visible={this.state.showingInfoWindow}\n//           onClose={this.onClose}\n//         >\n//           <div>\n//             <h4>{this.state.selectedPlace.name}</h4>\n//             <h4>{this.state.selectedPlace.title}</h4>\n//           </div>\n//         </InfoWindow>\n//       </Map>\n//       </div>\n//       </div>\n//     );\n// }\n//export default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SignInButton\");\n$RefreshReg$(_c2, \"ProfileButton\");","map":{"version":3,"sources":["/Users/nirajshah/Library/Mobile Documents/com~apple~CloudDocs/Documents/A Northwestern/A Classes/22 Winter Quarter/CS 394/Spot/src/App.js"],"names":["logo","React","Component","PropTypes","ReactDOM","Map","GoogleApiWrapper","InfoWindow","Marker","Handlebars","MapLayout","MainLayout","PanelStyles","LocationName","AmenityName","AvailabilityTxt","PriceTxt","ScanButton","ScanButtonTxt","AmenitiesLayout","BottomNav","ScanBottomNavTxt","ScanButtonBottomNav","AccountIcon","HelpIcon","TopBanner","close","CurrentLocationIcon","paws","Activepaws","Panel","PanelGroup","CurrentLocation","database","signInwithG","auth","getDatabase","onValue","ref","set","on","scanSVG","accSVG","helpSVG","topLogo","Profile","google","window","SignInButton","ProfileButton","render","document","getElementById","MapContainer","constructor","props","unsubscribeFromAuth","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","onSignIn","user","icon","locationList","currentUser","componentDidMount","reference","snapshot","locations","forEach","snap","push","val","onAuthStateChanged","componentWillUnmount","photoURL","displayName","email","signOut","Object","values","map","lat","latitude","lng","longitude","name","amenities","id","availability","price","title","apiKey"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component, PropTypes } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport Handlebars from \"handlebars/dist/cjs/handlebars\";\nimport {\n  MapLayout,\n  MainLayout,\n  PanelStyles,\n  LocationName,\n  AmenityName,\n  AvailabilityTxt,\n  PriceTxt,\n  ScanButton,\n  ScanButtonTxt,\n  AmenitiesLayout,\n  BottomNav,\n  ScanBottomNavTxt,\n  ScanButtonBottomNav,\n  AccountIcon,\n  HelpIcon,\n  TopBanner,\n} from \"./styles/mapstyles\";\nimport close from \"../src/styles/svgs/close.svg\";\nimport CurrentLocationIcon from \"../src/styles/svgs/Location.svg\";\nimport paws from \"../src/styles/svgs/paws.png\";\nimport Activepaws from \"../src/styles/svgs/ActivePaws.png\";\nimport { Panel, PanelGroup } from \"rsuite\";\nimport CurrentLocation from \"./Map\";\nimport { database, signInwithG, auth } from \"./utilities/firebase.js\";\n\nimport { getDatabase, onValue, ref, set, on } from \"firebase/database\";\n\nimport scanSVG from \"../src/styles/svgs/scan.svg\";\nimport accSVG from \"../src/styles/svgs/account.svg\";\nimport helpSVG from \"../src/styles/svgs/help.svg\";\nimport topLogo from \"../src/styles/svgs/SpotLogos.png\";\n\nimport Profile from \"./Profile.js\"\nconst google = window.google;\n\n\n/**\n * Defines an instance of the Locator+ solution, to be instantiated\n * when the Maps library is loaded.\n */\n// const mapStyles = {\n//   width: \"428px\",\n//   height: \"934px\",\n// };\n\n// const instance = (\n//   <Panel header=\"Panel title\">\n//     <p>HELLO WORLD</p>\n//   </Panel>\n// );\n\n// let user = null;\n\nconst SignInButton = () => {\n  // {document.getElementById(\"user-info\").innerHTML = \"\"};\n\n  return (\n    <button className=\"btn\"\n      onClick={() => {\n        signInwithG();\n      }\n      }>\n      \n      Sign In\n    </button>\n  );\n};\n\n\n\n\n// const SignOutButton = (cuser) => {\n//   return (<>\n//     <p className=\"email\">\n//       {window.innerWidth > 800 ? cuser : null}\n//       <button className=\"btn\" id=\"out\" style={{ width: 120, margin: 20 }}\n//         onClick={() => auth.signOut()}>\n//         Sign Out\n//       </button>\n//     </p>\n//   </>\n//   )\n// };\n\n// function MyFireBaseHook()\n// {\n//   return function WrappedComponent()\n//     {\n//       const [locations, loading, error] = useData('/Locations/');\n//       if (error) return <h1>{error}</h1>;\n//       if (loading) return <h1>Loading Locations...</h1>;\n//       console.log(locations)\n//       return <Component Location = {locations}/>;\n//     };\n// }\nexport const ProfileButton = () => (\n  <>\n    {/* <button\n      type=\"button\"\n      className=\"btn\" \n      img = {accSVG}\n      onClick={() =>\n        ReactDOM.render(<Profile />, document.getElementById(\"root\"))\n      }\n    > */}\n      <input type=\"image\" src={accSVG} name=\"saveForm\" className=\"btTxt submit\" onClick={() =>\n        ReactDOM.render(<Profile />, document.getElementById(\"root\"))\n      } >\n\n      </input>\n\n      {/* { window.innerWidth > 600 ? \"Add food\" : \"add\"} */}\n\n    {/*  </button> */}\n  </>\n);\n\n//Initializes the map and marker functionality\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showingInfoWindow: false, // Hides or shows the InfoWindow\n      activeMarker: {}, // Shows the active marker upon click\n      selectedPlace: {}, // Shows the InfoWindow to the selected place upon a marker\n      icon: paws,\n      locationList: [],\n      currentUser: null\n    };\n  }\n  unsubscribeFromAuth = signInwithG();\n\n  // GetData = () => {\n  //   return function WrappedComponent()\n  //   {\n  //     const [locations, loading, error] = useData('/Locations/');\n  //     if (error) return <h1>{error}</h1>;\n  //     if (loading) return <h1>Loading Locations...</h1>;\n\n  //     return locations;\n  //   };\n\n  // }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n\n  onClose = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n      });\n    }\n  };\n\n  onSignIn = () => {\n    this.setState({ user: true });\n  };\n\n  componentDidMount() {\n    const reference = ref(database, \"/Locations/\");\n\n    onValue(reference, (snapshot) => {\n      let locations = [];\n      snapshot.forEach((snap) => {\n        // snap.val() is the dictionary with all your keys/values from the 'students-list' path\n        locations.push(snap.val());\n      });\n\n      this.setState({ locationList: locations });\n    });\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(user => {\n      this.setState({ currentUser: user })\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n  render() {\n    return (\n      //Renders the panel and the map <MyFireBaseHook/>\n      <div>\n        {!this.state.currentUser ? <SignInButton />: \n        <div id=\"outline\">\n          <MainLayout>\n            <TopBanner>\n              <img src={topLogo} width=\"96px\" />\n            </TopBanner>\n            {/* <SignInButton/> */}\n\n            <div id='user-info'>\n              {this.state.currentUser ? (<div>\n                <div>\n                  <img src={this.state.currentUser.photoURL} />\n                </div>\n                <div>Name: {this.state.currentUser.displayName}</div>\n                <div>Email: {this.state.currentUser.email}</div>\n\n                <button className=\"btn\" onClick={() => auth.signOut()}>Sign Out</button>\n              </div>\n              ) : <SignInButton />}\n            </div>\n            <CurrentLocation\n              centerAroundCurrentLocation\n              google={this.props.google}\n            >\n              <Marker key={\"current\"}\n                icon={CurrentLocationIcon}\n                onClick={this.onMarkerClick}\n                name={\"Current Location\"}\n              />\n              {/* <InfoWindow\n              marker={this.state.activeMarker}\n              visible={this.state.showingInfoWindow}\n              onClose={this.onClose}\n            >\n              <div>\n                <h4>{this.state.selectedPlace.name}</h4>\n              </div>\n            </InfoWindow> */}\n              {Object.values(this.state.locationList).map((marker) =>\n                <Marker\n                  onClick={this.onMarkerClick}\n                  icon={this.state.activeMarker === marker ? Activepaws : paws}\n                  position={{ lat: marker.latitude, lng: marker.longitude }}\n                  key={marker.id}\n                  name={marker.name}\n                  availability=\"• Available\"\n                  price=\"$3.30 unlock, $0.3 per min\"\n                  title={marker.amenities}\n                />\n              )}\n              <InfoWindow\n                marker={this.state.activeMarker}\n                visible={this.state.showingInfoWindow}\n                onClose={this.onClose}\n              >\n                <div>\n                  <h4>{this.state.selectedPlace.name}</h4>\n                </div>\n              </InfoWindow>\n            </CurrentLocation>\n            <BottomNav>\n              <AccountIcon>\n                <ProfileButton />\n                {/* <img src={accSVG} /> */}\n              </AccountIcon>\n              <ScanButtonBottomNav>\n                <img src={scanSVG} />\n                <ScanBottomNavTxt>SCAN</ScanBottomNavTxt>\n              </ScanButtonBottomNav>\n              <HelpIcon>\n                <img src={helpSVG} />\n              </HelpIcon>\n            </BottomNav>\n            {this.state.showingInfoWindow ? (\n              <PanelStyles\n                marker={this.state.activeMarker}\n                visible={this.state.showingInfoWindow}\n                onClose={this.onClose}\n              >\n                <img\n                  src={close}\n                  onClick={() =>\n                    this.setState({\n                      showingInfoWindow: false,\n                      activeMarker: null,\n                    })\n                  }\n                />\n                <AvailabilityTxt>\n                  {this.state.selectedPlace.availability}\n                </AvailabilityTxt>\n                <LocationName>{this.state.selectedPlace.name}</LocationName>\n                <PriceTxt>{this.state.selectedPlace.price}</PriceTxt>\n\n                <AmenitiesLayout>\n                  <AmenityName>{this.state.selectedPlace.title}</AmenityName>\n                </AmenitiesLayout>\n\n                <center>\n                  <ScanButton>\n                    <ScanButtonTxt>Scan to unlock</ScanButtonTxt>\n                  </ScanButton>\n                </center>\n              </PanelStyles>\n            ) : null}\n            {/* Populating markers from marker list, allows for multiple markers */}\n            {/* What shows up in the window on marker click */}\n          </MainLayout>\n        </div>\n        }\n      </div>\n    );\n  }\n}\n\n// API Keys\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAQoEnnmtQQ0bJ8fCvmKHPOI6VtNCXD6EY\",\n})(MapContainer);\n\n//Run App (not using it rn - may need it later)\n// function App() {\n\n//   return (\n//     //Renders the panel and the map\n//      <div className=\"panel_map\">\n//        <Panel className=\"panel\" header=\"Panel title\">\n//          <p>HELLO WORLD</p>\n//         </Panel>\n\n//       <div className=\"map\">\n\n//       {/* Map API initialization */}\n//       <Map\n//         google={this.props.google}\n//         zoom={14}\n//         style={mapStyles}\n//         initialCenter={\n//           {\n//             lat: 41.918060,\n//             lng: -87.636990\n//           }\n//         }\n//         >\n//        {/* Populating markers from marker list, allows for multiple markers */}\n//       {Object.values(markers).map(marker => (\n//             <Marker\n//               onClick={this.onMarkerClick}\n//               position={{ lat: marker.latitude, lng: marker.longitude }}\n//               key={marker.id}\n//               name={marker.name}\n//               title = {marker.amenities}\n//             />\n//         ))}\n//         {/* What shows up in the window on marker click */}\n//         <InfoWindow\n//           marker={this.state.activeMarker}\n//           visible={this.state.showingInfoWindow}\n//           onClose={this.onClose}\n//         >\n//           <div>\n//             <h4>{this.state.selectedPlace.name}</h4>\n//             <h4>{this.state.selectedPlace.title}</h4>\n//           </div>\n//         </InfoWindow>\n//       </Map>\n//       </div>\n//       </div>\n\n//     );\n// }\n\n//export default App;\n"]},"metadata":{},"sourceType":"module"}