{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { initializeApp } from 'firebase/app';\nimport { useState, useEffect } from 'react';\nimport { getDatabase, onValue, ref, set } from 'firebase/database';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBAAAaqRWLP7A4BwEmCVC2OWoKXw8j79W4\",\n  authDomain: \"dirtylittlepaws-487d9.firebaseapp.com\",\n  databaseURL: \"https://dirtylittlepaws-487d9-default-rtdb.firebaseio.com\",\n  projectId: \"dirtylittlepaws-487d9\",\n  storageBucket: \"dirtylittlepaws-487d9.appspot.com\",\n  messagingSenderId: \"781498327165\",\n  appId: \"1:781498327165:web:9da20c4afa727b8e5e5114\"\n};\nconst firebase = initializeApp(firebaseConfig);\nconst database = getDatabase(firebase);\nexport const useData = (path, transform) => {\n  _s();\n\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    const dbRef = database.ref(path);\n    const devMode = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\n    if (devMode) {\n      console.log(`loading ${path}`);\n    }\n\n    return dbRef.on('value', snapshot => {\n      const val = snapshot.val();\n\n      if (devMode) {\n        console.log(val);\n      }\n\n      setData(transform ? transform(val) : val);\n      setLoading(false);\n      setError(null);\n    }, error => {\n      setData(null);\n      setLoading(false);\n      setError(error);\n    });\n  }, [path, transform]);\n  return [data, loading, error];\n};\n\n_s(useData, \"NHGwgwF0D09hI9K12vQBrfPMsF4=\");\n\nexport const signInWithG = () => {\n  signInWithPopup(getAuth(firebase), new GoogleAuthProvider());\n};\nexport const signOutOfG = () => signOut(getAuth(firebase));","map":{"version":3,"sources":["/Users/nirajshah/Library/Mobile Documents/com~apple~CloudDocs/Documents/A Northwestern/A Classes/22 Winter Quarter/CS 394/DIrtyLittlePaws/dirtylittlepaws/src/utilities/firebase.js"],"names":["initializeApp","useState","useEffect","getDatabase","onValue","ref","set","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","database","useData","path","transform","data","setData","loading","setLoading","error","setError","dbRef","devMode","process","env","NODE_ENV","console","log","on","snapshot","val","signInWithG","signInWithPopup","getAuth","GoogleAuthProvider","signOutOfG","signOut"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,GAA/B,EAAoCC,GAApC,QAA+C,mBAA/C;AAGA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,uCAFO;AAGnBC,EAAAA,WAAW,EAAE,2DAHM;AAInBC,EAAAA,SAAS,EAAE,uBAJQ;AAKnBC,EAAAA,aAAa,EAAE,mCALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAAvB;AAUA,MAAMC,QAAQ,GAAGf,aAAa,CAACO,cAAD,CAA9B;AACA,MAAMS,QAAQ,GAAGb,WAAW,CAACY,QAAD,CAA5B;AAEA,OAAO,MAAME,OAAO,GAAG,CAACC,IAAD,EAAOC,SAAP,KAAqB;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBpB,QAAQ,EAAhC;AACA,QAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,KAAK,GAAGV,QAAQ,CAACX,GAAT,CAAaa,IAAb,CAAd;AACA,UAAMS,OAAO,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAb,IAAyBF,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAlE;;AACA,QAAIH,OAAJ,EAAa;AAAEI,MAAAA,OAAO,CAACC,GAAR,CAAa,WAAUd,IAAK,EAA5B;AAAiC;;AAChD,WAAOQ,KAAK,CAACO,EAAN,CAAS,OAAT,EAAmBC,QAAD,IAAc;AACrC,YAAMC,GAAG,GAAGD,QAAQ,CAACC,GAAT,EAAZ;;AACA,UAAIR,OAAJ,EAAa;AAAEI,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AAAmB;;AAClCd,MAAAA,OAAO,CAACF,SAAS,GAAGA,SAAS,CAACgB,GAAD,CAAZ,GAAoBA,GAA9B,CAAP;AACAZ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KANM,EAMHD,KAAD,IAAW;AACZH,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAVM,CAAP;AAWD,GAfQ,EAeN,CAACN,IAAD,EAAOC,SAAP,CAfM,CAAT;AAiBA,SAAO,CAACC,IAAD,EAAOE,OAAP,EAAgBE,KAAhB,CAAP;AACD,CAvBI;;GAAMP,O;;AAyBX,OAAO,MAAMmB,WAAW,GAAG,MAAM;AAC/BC,EAAAA,eAAe,CAACC,OAAO,CAACvB,QAAD,CAAR,EAAoB,IAAIwB,kBAAJ,EAApB,CAAf;AACD,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAG,MAAMC,OAAO,CAACH,OAAO,CAACvB,QAAD,CAAR,CAAhC","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { useState, useEffect } from 'react';\nimport { getDatabase, onValue, ref, set } from 'firebase/database';\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBAAAaqRWLP7A4BwEmCVC2OWoKXw8j79W4\",\n    authDomain: \"dirtylittlepaws-487d9.firebaseapp.com\",\n    databaseURL: \"https://dirtylittlepaws-487d9-default-rtdb.firebaseio.com\",\n    projectId: \"dirtylittlepaws-487d9\",\n    storageBucket: \"dirtylittlepaws-487d9.appspot.com\",\n    messagingSenderId: \"781498327165\",\n    appId: \"1:781498327165:web:9da20c4afa727b8e5e5114\"\n  };\n\nconst firebase = initializeApp(firebaseConfig);\nconst database = getDatabase(firebase);\n\nexport const useData = (path, transform) => {\n    const [data, setData] = useState();\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState();\n  \n    useEffect(() => {\n      const dbRef = database.ref(path);\n      const devMode = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n      if (devMode) { console.log(`loading ${path}`); }\n      return dbRef.on('value', (snapshot) => {\n        const val = snapshot.val();\n        if (devMode) { console.log(val); }\n        setData(transform ? transform(val) : val);\n        setLoading(false);\n        setError(null);\n      }, (error) => {\n        setData(null);\n        setLoading(false);\n        setError(error);\n      });\n    }, [path, transform]);\n\n    return [data, loading, error];\n  };\n\n  export const signInWithG = () => {\n    signInWithPopup(getAuth(firebase), new GoogleAuthProvider());\n  };\n\n  export const signOutOfG = () => signOut(getAuth(firebase));"]},"metadata":{},"sourceType":"module"}