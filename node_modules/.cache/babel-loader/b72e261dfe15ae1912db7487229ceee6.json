{"ast":null,"code":"var _jsxFileName = \"/Users/nirajshah/Library/Mobile Documents/com~apple~CloudDocs/Documents/A Northwestern/A Classes/22 Winter Quarter/CS 394/DIrtyLittlePaws/dirtylittlepaws/src/App.js\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport Handlebars from \"handlebars/dist/cjs/handlebars\";\nimport { MapLayout, MainLayout, PanelStyles, LocationName, AmenityName, AvailabilityTxt, PriceTxt, ScanButton, ScanButtonTxt, AmenitiesLayout, BottomNav } from \"./styles/mapstyles\";\nimport close from \"../src/styles/svgs/close.svg\";\nimport CurrentLocationIcon from \"../src/styles/svgs/Location.svg\";\nimport paws from \"../src/styles/svgs/paws.png\";\nimport Activepaws from \"../src/styles/svgs/ActivePaws.png\";\nimport { Panel, PanelGroup } from \"rsuite\";\nimport CurrentLocation from \"./Map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\n/**\n * Defines an instance of the Locator+ solution, to be instantiated\n * when the Maps library is loaded.\n */\n\nconst mapStyles = {\n  width: \"428px\",\n  height: \"934px\"\n};\n\nconst instance = /*#__PURE__*/_jsxDEV(Panel, {\n  header: \"Panel title\",\n  children: /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"HELLO WORLD\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 3\n}, this); //Array of positions for dog station locations with amenties and names\n\n\nconst markers = [{\n  id: 1,\n  latitude: 41.91806,\n  longitude: -87.63699,\n  name: \"1960 N Lincoln Park W\",\n  amenities: \"Washing, Drying, Pawicure, Grooming\"\n}, {\n  id: 2,\n  latitude: 41.92223,\n  longitude: -87.665672,\n  name: \"2228 N Clybourn Ave\",\n  amenities: \"Washing, Drying\"\n}, {\n  id: 3,\n  latitude: 41.9103558,\n  longitude: -87.6735355,\n  name: \"1825 W North Ave\",\n  amenities: \"Washing, Drying, Pawicure, Grooming\"\n}, {\n  id: 4,\n  latitude: 41.9174825,\n  longitude: -87.6597932,\n  name: \"2000 N Clybourn Ave\",\n  amenities: \"Washing, Drying, Grooming\"\n}, {\n  id: 5,\n  latitude: 41.9149889,\n  longitude: -87.6645697,\n  name: \"1765 N Elston Ave\",\n  amenities: \"Washing, Drying, Grooming\"\n}, {\n  id: 6,\n  latitude: 41.9010907,\n  longitude: -87.6318406,\n  name: \"Near North Side\",\n  amenities: \"Washing, Drying\"\n}, {\n  id: 7,\n  latitude: 41.9320681,\n  longitude: -87.6687625,\n  name: \"2750 N Ashland Ave\",\n  amenities: \"Washing, Drying, Pawicure, Grooming\"\n}]; //Initializes the map and marker functionality\n\nexport class MapContainer extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      showingInfoWindow: false,\n      // Hides or shows the InfoWindow\n      activeMarker: {},\n      // Shows the active marker upon click\n      selectedPlace: {},\n      // Shows the InfoWindow to the selected place upon a marker\n      icon: paws\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n  }\n\n  //Renders the app\n  render() {\n    return (\n      /*#__PURE__*/\n      //Renders the panel and the map\n      _jsxDEV(MainLayout, {\n        children: [/*#__PURE__*/_jsxDEV(CurrentLocation, {\n          centerAroundCurrentLocation: true,\n          google: this.props.google,\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            icon: CurrentLocationIcon,\n            onClick: this.onMarkerClick,\n            name: \"Current Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), Object.values(markers).map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n            onClick: this.onMarkerClick,\n            icon: this.state.activeMarker === marker ? Activepaws : paws,\n            position: {\n              lat: marker.latitude,\n              lng: marker.longitude\n            },\n            name: marker.name,\n            availability: \"\\u2022 Available\",\n            price: \"$3.30 unlock, $0.3 per min\",\n            title: marker.amenities\n          }, marker.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)), /*#__PURE__*/_jsxDEV(InfoWindow, {\n            marker: this.state.activeMarker,\n            visible: this.state.showingInfoWindow,\n            onClose: this.onClose,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: this.state.selectedPlace.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(BottomNav, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), this.state.showingInfoWindow ? /*#__PURE__*/_jsxDEV(PanelStyles, {\n          marker: this.state.activeMarker,\n          visible: this.state.showingInfoWindow,\n          onClose: this.onClose,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: close,\n            onClick: () => this.setState({\n              showingInfoWindow: false,\n              activeMarker: null\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AvailabilityTxt, {\n            children: this.state.selectedPlace.availability\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LocationName, {\n            children: this.state.selectedPlace.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PriceTxt, {\n            children: this.state.selectedPlace.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AmenitiesLayout, {\n            children: /*#__PURE__*/_jsxDEV(AmenityName, {\n              children: this.state.selectedPlace.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n            children: /*#__PURE__*/_jsxDEV(ScanButton, {\n              children: /*#__PURE__*/_jsxDEV(ScanButtonTxt, {\n                children: \"Scan to unlock\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n} // API Keys\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAQoEnnmtQQ0bJ8fCvmKHPOI6VtNCXD6EY\"\n})(MapContainer); //Run App (not using it rn - may need it later)\n// function App() {\n//   return (\n//     //Renders the panel and the map\n//      <div className=\"panel_map\">\n//        <Panel className=\"panel\" header=\"Panel title\">\n//          <p>HELLO WORLD</p>\n//         </Panel>\n//       <div className=\"map\">\n//       {/* Map API initialization */}\n//       <Map\n//         google={this.props.google}\n//         zoom={14}\n//         style={mapStyles}\n//         initialCenter={\n//           {\n//             lat: 41.918060,\n//             lng: -87.636990\n//           }\n//         }\n//         >\n//        {/* Populating markers from marker list, allows for multiple markers */}\n//       {Object.values(markers).map(marker => (\n//             <Marker\n//               onClick={this.onMarkerClick}\n//               position={{ lat: marker.latitude, lng: marker.longitude }}\n//               key={marker.id}\n//               name={marker.name}\n//               title = {marker.amenities}\n//             />\n//         ))}\n//         {/* What shows up in the window on marker click */}\n//         <InfoWindow\n//           marker={this.state.activeMarker}\n//           visible={this.state.showingInfoWindow}\n//           onClose={this.onClose}\n//         >\n//           <div>\n//             <h4>{this.state.selectedPlace.name}</h4>\n//             <h4>{this.state.selectedPlace.title}</h4>\n//           </div>\n//         </InfoWindow>\n//       </Map>\n//       </div>\n//       </div>\n//     );\n// }\n//export default App;","map":{"version":3,"sources":["/Users/nirajshah/Library/Mobile Documents/com~apple~CloudDocs/Documents/A Northwestern/A Classes/22 Winter Quarter/CS 394/DIrtyLittlePaws/dirtylittlepaws/src/App.js"],"names":["logo","React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","Handlebars","MapLayout","MainLayout","PanelStyles","LocationName","AmenityName","AvailabilityTxt","PriceTxt","ScanButton","ScanButtonTxt","AmenitiesLayout","BottomNav","close","CurrentLocationIcon","paws","Activepaws","Panel","PanelGroup","CurrentLocation","google","window","mapStyles","width","height","instance","markers","id","latitude","longitude","name","amenities","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","icon","onMarkerClick","props","marker","e","setState","onClose","render","Object","values","map","lat","lng","availability","price","title","apiKey"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from \"google-maps-react\";\nimport Handlebars from \"handlebars/dist/cjs/handlebars\";\nimport {\n  MapLayout,\n  MainLayout,\n  PanelStyles,\n  LocationName,\n  AmenityName,\n  AvailabilityTxt,\n  PriceTxt,\n  ScanButton,\n  ScanButtonTxt,\n  AmenitiesLayout,\n  BottomNav,\n} from \"./styles/mapstyles\";\nimport close from \"../src/styles/svgs/close.svg\";\nimport CurrentLocationIcon from \"../src/styles/svgs/Location.svg\";\nimport paws from \"../src/styles/svgs/paws.png\";\nimport Activepaws from \"../src/styles/svgs/ActivePaws.png\";\nimport { Panel, PanelGroup } from \"rsuite\";\nimport CurrentLocation from \"./Map\";\nconst google = window.google;\n\n/**\n * Defines an instance of the Locator+ solution, to be instantiated\n * when the Maps library is loaded.\n */\nconst mapStyles = {\n  width: \"428px\",\n  height: \"934px\",\n};\n\nconst instance = (\n  <Panel header=\"Panel title\">\n    <p>HELLO WORLD</p>\n  </Panel>\n);\n\n//Array of positions for dog station locations with amenties and names\nconst markers = [\n  {\n    id: 1,\n    latitude: 41.91806,\n    longitude: -87.63699,\n    name: \"1960 N Lincoln Park W\",\n    amenities: \"Washing, Drying, Pawicure, Grooming\",\n  },\n  {\n    id: 2,\n    latitude: 41.92223,\n    longitude: -87.665672,\n    name: \"2228 N Clybourn Ave\",\n    amenities: \"Washing, Drying\",\n  },\n  {\n    id: 3,\n    latitude: 41.9103558,\n    longitude: -87.6735355,\n    name: \"1825 W North Ave\",\n    amenities: \"Washing, Drying, Pawicure, Grooming\",\n  },\n  {\n    id: 4,\n    latitude: 41.9174825,\n    longitude: -87.6597932,\n    name: \"2000 N Clybourn Ave\",\n    amenities: \"Washing, Drying, Grooming\",\n  },\n  {\n    id: 5,\n    latitude: 41.9149889,\n    longitude: -87.6645697,\n    name: \"1765 N Elston Ave\",\n    amenities: \"Washing, Drying, Grooming\",\n  },\n  {\n    id: 6,\n    latitude: 41.9010907,\n    longitude: -87.6318406,\n    name: \"Near North Side\",\n    amenities: \"Washing, Drying\",\n  },\n  {\n    id: 7,\n    latitude: 41.9320681,\n    longitude: -87.6687625,\n    name: \"2750 N Ashland Ave\",\n    amenities: \"Washing, Drying, Pawicure, Grooming\",\n  },\n];\n\n//Initializes the map and marker functionality\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false, // Hides or shows the InfoWindow\n    activeMarker: {}, // Shows the active marker upon click\n    selectedPlace: {}, // Shows the InfoWindow to the selected place upon a marker\n    icon:paws\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n\n  onClose = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n      });\n    }\n  };\n\n  //Renders the app\n  render() {\n    return (\n      //Renders the panel and the map\n      <MainLayout>\n        <CurrentLocation centerAroundCurrentLocation google={this.props.google}>\n          <Marker icon = {CurrentLocationIcon} onClick={this.onMarkerClick} name={\"Current Location\"} />\n          {/* <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow> */}\n          {Object.values(markers).map((marker) => (\n            <Marker\n              onClick={this.onMarkerClick}\n              icon = {this.state.activeMarker === marker ? Activepaws : paws}\n              position={{ lat: marker.latitude, lng: marker.longitude }}\n              key={marker.id}\n              name={marker.name}\n              availability=\"• Available\"\n              price=\"$3.30 unlock, $0.3 per min\"\n              title={marker.amenities}\n            />\n          ))}\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n            onClose={this.onClose}\n          >\n            <div>\n              <h4>{this.state.selectedPlace.name}</h4>\n            </div>\n          </InfoWindow>\n          <BottomNav>\n          </BottomNav>\n        </CurrentLocation>\n        {this.state.showingInfoWindow ? (\n          <PanelStyles\n          marker={this.state.activeMarker}\n\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}>\n            <img src={close} onClick = {() => this.setState({ showingInfoWindow: false, activeMarker: null,})} /> \n            <AvailabilityTxt>\n              {this.state.selectedPlace.availability}\n            </AvailabilityTxt>\n            <LocationName>{this.state.selectedPlace.name}</LocationName>\n            <PriceTxt>{this.state.selectedPlace.price}</PriceTxt>\n\n            <AmenitiesLayout>\n              <AmenityName>{this.state.selectedPlace.title}</AmenityName>\n            </AmenitiesLayout>\n\n            <center>\n              <ScanButton>\n                <ScanButtonTxt>Scan to unlock</ScanButtonTxt>\n              </ScanButton>\n            </center>\n          </PanelStyles>\n        ) : null}\n        {/* Populating markers from marker list, allows for multiple markers */}\n        {/* What shows up in the window on marker click */}\n      </MainLayout>\n    );\n  }\n}\n\n// API Keys\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyAQoEnnmtQQ0bJ8fCvmKHPOI6VtNCXD6EY\",\n})(MapContainer);\n\n//Run App (not using it rn - may need it later)\n// function App() {\n\n//   return (\n//     //Renders the panel and the map\n//      <div className=\"panel_map\">\n//        <Panel className=\"panel\" header=\"Panel title\">\n//          <p>HELLO WORLD</p>\n//         </Panel>\n\n//       <div className=\"map\">\n\n//       {/* Map API initialization */}\n//       <Map\n//         google={this.props.google}\n//         zoom={14}\n//         style={mapStyles}\n//         initialCenter={\n//           {\n//             lat: 41.918060,\n//             lng: -87.636990\n//           }\n//         }\n//         >\n//        {/* Populating markers from marker list, allows for multiple markers */}\n//       {Object.values(markers).map(marker => (\n//             <Marker\n//               onClick={this.onMarkerClick}\n//               position={{ lat: marker.latitude, lng: marker.longitude }}\n//               key={marker.id}\n//               name={marker.name}\n//               title = {marker.amenities}\n//             />\n//         ))}\n//         {/* What shows up in the window on marker click */}\n//         <InfoWindow\n//           marker={this.state.activeMarker}\n//           visible={this.state.showingInfoWindow}\n//           onClose={this.onClose}\n//         >\n//           <div>\n//             <h4>{this.state.selectedPlace.name}</h4>\n//             <h4>{this.state.selectedPlace.title}</h4>\n//           </div>\n//         </InfoWindow>\n//       </Map>\n//       </div>\n//       </div>\n\n//     );\n// }\n\n//export default App;\n"]},"metadata":{},"sourceType":"module"}